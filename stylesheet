import praw
import config
import random
import time
import re
import os


def bot_login():
    r = praw.Reddit(username=config.username,
                    password=config.password,
                    client_id=config.client_id,
                    client_secret=config.client_secret,
                    user_agent="created by farrygodjd to comment")
    return r
author = ['Aragorn-bot']
aragorn = ['Aragorn', 'strider', 'aragorn-bot', 'aragornbot']
underhill = ['underhill', 'You draw far too attention', 'far too much']
trinket = ['prancing pony', 'what do you want', 'trinket']
carry = ['avoid being seen', 'disappear entirely','who are you', 'who are you?']
who = ['who are you', 'you frightened']
frightened = ['nearly frightened enough', 'hunts you']
longshanks = ['let him go', 'longshanks', 'little hobbit', 'stout heart']
nazgul = ['what are they', 'nine rings', 'ringwraiths', 'living nor dead', 'living or dead']
rivendell = ['leading us', 'master gamgee', 'house of']
nightfall = ['nightfall','gentlemen', "don't stop", 'dont stop']
breakfast = ['breakfast', 'second', "we've had one", 'weve had one ']
woman =['this woman you sing of', 'sing of', 'luthien', 'beren']
sul = ['Amon', 'Sûl', 'watchtower', 'watchtower of', 'we shall rest here']
dagger = ['these are for you', 'keep them safe']
morgul = ['help him', "he's been stabbed", 'morgul blade', 'beyond my skill', 'elvish medicine']
shadow = ['shadow ', 'shadow world', 'wraith']
weed = ['do you know ', 'athelas', 'kingsfoil']
arwen = ['arwen', 'ride hard']
gandalf = ['who are you', 'gandalf']
weakness = ['weakness', 'why do you fear the past', "Isildur's heir", 'not isildur himself', 'bound to his fate', 'blood flows']
met = ['first met', 'remember when', 'strayed', 'dream']
evenstar = ['evenstar', 'pendant', 'forsaking', 'bind yourself', 'immortal life']
wield = ['wield it ', 'use it against  him', 'foes of mordor', 'long has my father', 'give gondor', 'one ring', 'no other master']
protect = ['bear this burden', 'my life or death', 'protect', 'have my sword']
power = ['want that power', 'never wanted ', 'skill of the elves', 'skill of elves', 'reforge the sword of kings', 'power to wield', 'wield']
feet = ['feet']
gentlemen = ['gentlemen', "that's enough", 'thats enough', 'for the shire', 'got my arm']
boromir = ['give the ring', 'to frodo', 'strange fate', 'little thing', 'i care not']
Caradhras = ['Caradhras', 'caradhras', 'mountain', 'Mountain']
gap = ['to my city', 'make for the gap', 'get off the mountain', 'gap of rohan', 'isengard', 'too close']
hero = ['hero', 'brave', 'pony', 'bill']
go = ['go on', 'way home']
disturb = ['disturb the water']
cave = ['into the cave', 'moria', 'Khazad Dum']
back = ['stay close', 'get back', 'cave troll']
humor = ['Penis', 'penis', 'dick', 'Dick', 'be dead', 'dead', 'skewered', 'wild boar']
steady = ['steady', 'lean forward']
up = ['get them up']
pity = ['give them a moment', "pity's sake", 'swarming with orcs', 'get them up']
on = ['on your ', 'look']
dwarf = ['dwarf says', 'Ishkhaqwi ', 'not so courteous']
white = ['White tower', 'fall of gondor', 'glory of gondor', 'silver trumpets', 'ecthelion', 'denethor']
gollum = ['gollum', 'since moria', 'alert the enemy', 'even more dangerous', 'tracked us']
tirith = ['is the safer road', 'can regroup', 'strike ou for mordor', 'place of strength', 'can avail us', 'there is no strength']
leagues =['scared of who you are', 'quick to trust the elves', 'quick enough to trust the Elves', 'faith in your own people', 'there is weakness', 'there is frailty', 'there is courage', 'honor to be found', 'honour to be found']
argonath = ['argonath', 'my kin', 'long have i desired', 'kings of old']
boat = ['hide the', 'cross the lake', 'approach mordor']
master = ['our road', 'take some rest', 'master dwarf', 'recover your strength', 'recover my']
leave = ['should leave', 'patrol the eastern shore', 'patrol the shore', 'cover of darkness']
ring = ['taken boromir', 'is the ring', 'stay away']
swore = ['swore', 'protect you', 'from yourself']
fire = ['would you', 'destroy it', 'to the end', 'very fires of mordor']
horn = ['horn of gondor']
frodo = ['frodo', 'let frodo', 'little ones', 'hold still']
reach = ['beyond our', 'reach', 'could not', 'failed you all']
strength = ['world of men', 'will fall', 'darkness', 'city to ruin', 'in my blood', 'white city fall', 'our people']
son = ['son of gondor',  'captain', 'brother', 'king', 'at peace']
tower = ['white tower', 'boromir', 'not return', 'will look']
fate = ['not to follow', "frodo's", 'in our hands']
hold = ['in vain', 'fellowship has failed', 'fellowship failed', 'hold true', 'not abandon ', 'hunt some orc', 'hunt orc', 'some orc']
pace = ['pace has quickened', 'our scent']
lorien = ['lorien', 'idly', 'fall', 'brooch']
day = ['be alive', 'day ahead']
rohan = ['rohan', 'horse-lords', 'horse lords', 'speed to these creatures', 'will against us']
eyes = ['rascist', 'elf eyes' 'elf']
riders = ['mark', 'blood has been spilled', 'red sun', 'riders of rohan', 'news from', 'what business does']
self = ['aragorn','arathorn', 'gimli son of','legolas of the', 'your king', 'who are', 'i am', 'who are']
party = ['no spies', 'party of uruk', 'our friends captive']
small = ['would be small', 'two hobbits']
ah = ['did you know', 'helmet', 'ahh', 'trivia', 'toes','toe']
hobbit = ['failed them ', 'lay there', 'were followed', 'bonds were cut', 'they crawled']
fangorn = ['tracks lead away ', 'track lead away ', 'fangorn']
tracks = ['strange', 'air is close']
axe = ['gimli', 'your axe', 'axe', 'speaking to each other']
saruman = ['saruman', 'white wizard', 'do not let him speak', 'a spell on us', 'be quick']
comfort = ['passed this way', 'day before yesterday', 'does that comfort', 'someone they did not expect', 'who are', 'show yourself']
trouble = ['edoras', 'no short distance', 'trouble in rohan', 'ill with the king']
cannot = [' returned', 'return', 'cannot be']
fell = ['you fell', 'through fire', 'I am saruman', 'balrog']
ill = ['edoras', 'short distance', 'trouble in rohan', 'ill with the king']
friend = ['mere chance', 'great power has been', 'falling of', 'dear friend', 'in riddles']
sam = ['sauron fears you', 'at the world of men', 'war is coming', "And so he'll strike hard and fast at the world of Men. He will use his puppet Saruman to destroy Rohan. War is coming. Rohan must defend itself, and therein lies our first challenge for Rohan is weak and ready to fall. The king's mind is enslaved, it's an old device of Saruman's. His hold over King Theoden is now very strong. Sauron and Saruman are tightening the noose. But for all their cunning we have one advantage. The Ring remains hidden. And that we should seek to destroy it has not yet entered their darkest dreams. And so the weapon of the enemy is moving towards Mordor in the hands of a Hobbit. Each day brings it closer to the fires of Mount Doom. We must trust now in Frodo. Everything depends upon speed and the secrecy of his quest. Do not regret your decision to leave him. Frodo must finish this task alone."]
grima = ['from your sight', 'grima', 'blood has been spilt']
theoden = ['theoden']
thousand = ['you thousand', '2,000', '2000', 'two thousand good men', 'eomer is loyal', 'Éomer is loyal to you']
open = ['open war', 'three hundred', 'cannot help us', 'death to my people']
deep = ["Helm's deep", 'helms deep', 'flee to the mountains', 'stand and fight', 'who will defend', 'best for the people', 'saved them in']
rivendell = ['magic of elves', 'a ranger from the north', 'as one of their own', 'raised in rivnedell', 'fellow free', 'enough war']
blade = ['eowyn fighting', 'skill with a blade']
fear = ['women of this country', 'learned long ago', 'without swords', 'neither death nor pain']
cage = ['cage', 'stay behind bars', 'old age accept them', 'chance of valor', 'recall or desire']
beard = ['dwarf women', 'so alike', 'dwarf men', 'beard', 'beards']
stew = ['stew', "isn't much", "it's hot", 'eowyn', 'thank you', "it's good"]
memory = ['my uncle', 'strange thing', 'rode to war', 'with thengel', 'must be mistaken', 'good memory', 'small child']
def run_bot(r, comment_replied_to):
    for comment in r.subreddit('lotrbot').comments(limit=25):

        for keyword in aragorn:  # look first for Aragorn if found then look for the any of the following otherwise proceed to last phase, just Aragorn

            if keyword in comment.body and comment.id not in comment_replied_to and not comment.author == r.user.me:
                for keyword in underhill:
                    if re.search(r"\b(" + "|".join(underhill) + r")\b", comment.body,
                                 re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("underhill")
                        comment.reply("You draw far too much attention to yourself Mr. “Underhill”!")
                        comment_replied_to.append(
                            comment.id)  # I'm going to be honest I have no idea what the following lines code do. All I know is without it the bot starts to spam
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in trinket:
                    if re.search(r"\b(" + "|".join(trinket) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("trinket")
                        comment.reply(" A little more caution from you. That is no trinket you carry.")
                        comment_replied_to.append(
                            comment.id)  # I'm going to be honest I have no idea what the following lines code do. All I know is without it the bot starts to spam
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in carry:
                    if re.search(r"\b(" + "|".join(carry) + r")\b", comment.body,
                                 re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("carry")
                        comment.reply(
                            "Indeed. I can avoid being seen if I wish. But to disappear entirely, that is a rare gift.")
                        comment_replied_to.append(
                            comment.id)  # I'm going to be honest I have no idea what the following lines code do. All I know is without it the bot starts to spam
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in who:
                    if re.search(r"\b(" + "|".join(who) + r")\b", comment.body,
                                 re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("who")
                        comment.reply(" Are you frightened?")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in frightened:
                    if re.search(r"\b(" + "|".join(frightened) + r")\b", comment.body,
                                 re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("frightened")
                        comment.reply("Not nearly frightened enough. I know what hunts you.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in longshanks:
                    if re.search(r"\b(" + "|".join(longshanks) + r")\b", comment.body,
                                 re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("longshanks")
                        comment.reply(" You have a stout heart little hobbit, but that will not save you. You can no longer wait for the wizard" + " " + comment.author.name + ". " + " " + "They’re coming.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in nazgul:
                    if re.search(r"\b(" + "|".join(nazgul) + r")\b", comment.body,
                                 re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("nazgul")
                        comment.reply("They were once Men- Great Kings of Men. Then Sauron the Deceiver gave to them nine rings of power. Blinded by their greed, they took them without question, one by one falling into darkness. Now they are slaves to his will. They are the Nazgûl, Ringwraiths, neither living nor dead. At all times they feel the presence of the Ring, drawn to the power of the One. They will never stop hunting you.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in rivendell:
                    if re.search(r"\b(" + "|".join(rivendell) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("rivendell")
                        comment.reply("To Rivendell, Master" + " " + comment.author.name + "." + " " + 'To the House of Elrond')
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in nightfall:
                    if re.search(r"\b(" + "|".join(nightfall) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("nightfall")
                        comment.reply("Gentlemen, we do not stop until nightfall.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in breakfast:
                    if re.search(r"\b(" + "|".join(breakfast) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("breakfast")
                        comment.reply("You’ve already had it.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in woman:
                    if re.search(r"\b(" + "|".join(woman) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("woman")
                        comment.reply(" ‘Tis the lady of Luthien- the Elf-maiden who gave her love to Beren, a mortal.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in sul:
                    if re.search(r"\b(" + "|".join(sul) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("sul")
                        comment.reply("This was the great watchtower of Amon Sûl. We shall rest here tonight.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in dagger:
                    if re.search(r"\b(" + "|".join(dagger) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("dagger")
                        comment.reply("These are for you. Keep them close. I’m going to have a look around. Stay here.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in morgul:
                    if re.search(r"\b(" + "|".join(morgul) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("morgul")
                        comment.reply(" He’s been stabbed by a Morgul blade.  This is beyond my skill to heal. He needs elvish medicine.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in shadow:
                    if re.search(r"\b(" + "|".join(shadow) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("shadow")
                        comment.reply("He’s passing into the shadow world. He will soon become a wraith like them.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in weed:
                    if re.search(r"\b(" + "|".join(weed) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("athelas")
                        plant = [comment.author.name + " " + ", do you know the Athelas plant?", 'It may help to slow the poison. Hurry!']
                        random_item = random.choice(plant)
                        comment.reply(random_item)
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in arwen:
                    if re.search(r"\b(" + "|".join(arwen) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("arwen")
                        comment.reply(comment.author.name + "!" + " " + "Ride hard! Don’t look back!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in gandalf:
                    if re.search(r"\b(" + "|".join(gandalf) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("who")
                        comment.reply(" I am a friend to Gandalf the Grey.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in weakness:
                    if re.search(r"\b(" + "|".join(weakness) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("weakness")
                        comment.reply("The same blood flows in my veins... The same weakness.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in met:
                    if re.search(r"\b(" + "|".join(met) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("met")
                        comment.reply("I thought I had strayed into a dream.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in evenstar:
                    if re.search(r"\b(" + "|".join(evenstar) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("evenstar")
                        comment.reply("You said you’d bind yourself to me. Forsaking the immortal life of your people.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in wield:
                    if re.search(r"\b(" + "|".join(wield) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("wield")
                        comment.reply(" You cannot wield it! None of us can. The One Ring answers to Sauron alone. It has no other master")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in protect:
                    if re.search(r"\b(" + "|".join(protect) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("protect")
                        comment.reply(" If by my life or death, I can protect you, I will. You have my sword.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in power:
                    if re.search(r"\b(" + "|".join(power) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("power")
                        comment.reply("I do not want that power. I have never wanted it.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in feet:
                    if re.search(r"\b(" + "|".join(feet) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("feet")
                        comment.reply(" Move your feet.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in gentlemen:
                    if re.search(r"\b(" + "|".join(gentlemen) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("gentlemen")
                        comment.reply(" Gentlemen, that’s enough!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in boromir:
                    if re.search(r"\b(" + "|".join(boromir) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("the ring")
                        comment.reply(comment.author.name + "!" + " "+ "Give the Ring to Frodo.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in Caradhras:
                    if re.search(r"\b(" + "|".join(Caradhras) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("Saruman is bringing the mountain")
                        comment.reply("HES TRYING TO BRING DOWN THE MOUNTAIN! GANDALF WE MUST TURN BACK!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in gap:
                    if re.search(r"\b(" + "|".join(gap) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("gap")
                        comment.reply(" The Gap of Rohan takes us too close to Isengard!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in hero:
                    if re.search(r"\b(" + "|".join(hero) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("hero")
                        comment.reply("The mines are no place for a pony, even one so brave as Bill.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in go:
                    if re.search(r"\b(" + "|".join(go) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("go bill")
                        comment.reply(" Go on, Bill, go on. Don’t worry" + " " + comment.author.name + ", " + " " + "he knows the way home." )
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in disturb:
                    if re.search(r"\b(" + "|".join(disturb) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("disturb")
                        comment.reply("Do not disturb the water.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in cave:
                    if re.search(r"\b(" + "|".join(cave) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("cave")
                        comment.reply("Into the cave! Run!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in back:
                    if re.search(r"\b(" + "|".join(back) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("back")
                        comment.reply("Get back! Stay close to Gandalf!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in humor:
                    if re.search(r"\b(" + "|".join(humor) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("Shlong")
                        comment.reply("You should be dead. That spear would have skewered a wild boar.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in steady:
                    if re.search(r"\b(" + "|".join(steady) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("steady")
                        comment.reply("Steady! Hold on. Hang on! Lean forward! Steady!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in up:
                    if re.search(r"\b(" + "|".join(up) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("up")
                        comment.reply(" Legolas, get them up.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in pity:
                    if re.search(r"\b(" + "|".join(pity) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("pity")
                        comment.reply("By nightfall these hills will be swarming with Orcs! We must reach the Woods of Lothlórien. Come Boromir. Legolas. Gimli, get them up.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in on:
                    if re.search(r"\b(" + "|".join(on) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("on your feet")
                        comment.reply("On you feet" + " " + comment.author.name + "." + " " + "Frodo? Frodo! " )
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in dwarf:
                    if re.search(r"\b(" + "|".join(dwarf) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("dwarf")
                        comment.reply("That was not so courteous.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in white:
                    if re.search(r"\b(" + "|".join(white) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("white")
                        comment.reply("I have seen the White City, long ago.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in gollum:
                    if re.search(r"\b(" + "|".join(gollum) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("gollum")
                        comment.reply("Gollum. He has tracked us since Moria. I had hoped we would lose him on the river. But he’s too clever a waterman.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in tirith:
                    if re.search(r"\b(" + "|".join(tirith) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("tirith")
                        comment.reply("There is no strength in Gondor that can avail us.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in leagues:
                    if re.search(r"\b(" + "|".join(leagues) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("leagues")
                        comment.reply("I will not lead the Ring within a hundred leagues of your city.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in argonath:
                    if re.search(r"\b(" + "|".join(argonath) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("argonath")
                        comment.reply(comment.author.name + "," + " " + "the Argonath! Long have I desired to look upon the kings of old... My kin.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in boat:
                    if re.search(r"\b(" + "|".join(boat) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("boat")
                        comment.reply("We cross the lake at nightfall. Hide the boats and continue on foot. We approach Mordor from the north.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in master:
                    if re.search(r"\b(" + "|".join(master) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("master")
                        comment.reply("That is our road. I suggest you take some rest and recover your strength, Master Dwarf.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in leave:
                    if re.search(r"\b(" + "|".join(leave) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("leave")
                        comment.reply("No. Orcs patrol the eastern shore. We must wait for cover of darkness.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in ring:
                    if re.search(r"\b(" + "|".join(ring) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("ring")
                        comment.reply("Where is the Ring?")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in swore:
                    if re.search(r"\b(" + "|".join(swore) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("swore")
                        comment.reply("I swore to protect you.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in fire:
                    if re.search(r"\b(" + "|".join(fire) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("fire")
                        comment.reply("I would have gone with you to the end. Into the very fires of Mordor.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in horn:
                    if re.search(r"\b(" + "|".join(horn) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("horn")
                        comment.reply("*Boromir.*")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in frodo:
                    if re.search(r"\b(" + "|".join(frodo) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("frodo")
                        comment.reply("I let Frodo go.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in reach:
                    if re.search(r"\b(" + "|".join(reach) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("reach")
                        comment.reply(" No, Boromir. You fought bravely. You have kept your honor.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in strength:
                    if re.search(r"\b(" + "|".join(strength) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("strength")
                        comment.reply("I do not know what strength is in my blood, but I swear to you I will not let the White City fall, nor our people fail.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in son:
                    if re.search(r"\b(" + "|".join(son) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("son")
                        comment.reply("Be at peace, son of Gondor.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in tower:
                    if re.search(r"\b(" + "|".join(tower) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("return")
                        comment.reply("They will look for his coming from the White Tower. But he will not return.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in fate:
                    if re.search(r"\b(" + "|".join(fate) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("fate")
                        comment.reply("Frodo’s fate is no longer in our hands.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in hold:
                    if re.search(r"\b(" + "|".join(hold) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("hold")
                        comment.reply("Not if we hold true to each other. We will not abandon Merry and Pippin to torment and death. Not while we have strength left. Leave all that can be spared behind. We travel light. Let’s hunt some Orc.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in pace:
                    if re.search(r"\b(" + "|".join(pace) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("pace")
                        comment.reply("Their pace has quickened. They must have caught our scent...hurry!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in lorien:
                    if re.search(r"\b(" + "|".join(lorien) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("lorien")
                        comment.reply("Not idly do the leaves of Lorien fall.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in day:
                    if re.search(r"\b(" + "|".join(day) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("day")
                        comment.reply("Less than a day ahead of us. Come.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in rohan:
                    if re.search(r"\b(" + "|".join(rohan) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("rohan")
                        comment.reply(" Rohan. Home of the Horse-lords. There is something strange at work here.Some evil gives speed to these creatures. Sets its will against us.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in eyes:
                    if re.search(r"\b(" + "|".join(eyes) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("eyes")
                        comment.reply(comment.author.name + "!" + " " + "What do your Elf-eyes see?")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in riders:
                    if re.search(r"\b(" + "|".join(riders) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("rider")
                        comment.reply("RIDERS OF ROHAN, WHAT NEWS FROM THE MARK?")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in self:
                    if re.search(r"\b(" + "|".join(self) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("self")
                        comment.reply("I am Aragorn, son of Arathorn, this is Gimli son of Gloin, and Legolas of the woodland realm. We are friends of Rohan, and of Théoden your King.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in party:
                    if re.search(r"\b(" + "|".join(party) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("party")
                        comment.reply("We are no spies. We track a party of Uruk-Hai westward across the plain. They have taken two of our friends captive.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in small:
                    if re.search(r"\b(" + "|".join(small) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("small")
                        comment.reply("They would be small, only children to your eyes.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in ah:
                    if re.search(r"\b(" + "|".join(ah) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("AH")
                        comment.reply("AHHHH")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in hobbit:
                    if re.search(r"\b(" + "|".join(hobbit) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("hobbit")
                        comment.reply("A hobbit lay, and the other. They crawled. Their hands were bound. They ran over here. They were followed.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in fangorn:
                    if re.search(r"\b(" + "|".join(fangorn) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("fangorn")
                        comment.reply("The tracks lead away from the battle...into Fangorn Forest.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in tracks:
                    if re.search(r"\b(" + "|".join(tracks) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("tracks")
                        comment.reply("These are strange tracks.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in axe:
                    if re.search(r"\b(" + "|".join(axe) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("Gimli. Lower your axe")
                        comment.reply("Gimli. Lower you axe.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in saruman:
                    if re.search(r"\b(" + "|".join(saruman) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("saruman")
                        comment.reply("Do not let him speak, he will put a spell on us. We must be quick.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in comfort:
                    if re.search(r"\b(" + "|".join(comfort) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("comfort")
                        comment.reply("Who are you? Show yourself!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in cannot:
                    if re.search(r"\b(" + "|".join(cannot) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("cannot")
                        comment.reply("It cannot be.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in fell:
                    if re.search(r"\b(" + "|".join(fell) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("fell")
                        comment.reply("You fell.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in ill:
                    if re.search(r"\b(" + "|".join(ill) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("ill")
                        comment.reply("We hear of trouble in Rohan. It goes ill with the king.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in friend:
                    if re.search(r"\b(" + "|".join(friend) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("friend")
                        comment.reply("In one thing you have not changed, dear friend...You still speak in riddles.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in sam:
                    if re.search(r"\b(" + "|".join(sam) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("sam")
                        comment.reply("He’s not alone. Sam went with him.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in grima:
                    if re.search(r"\b(" + "|".join(grima) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("grima")
                        comment.reply("No, my lord. No my lord. Let him go. Enough blood has been spilt on his account.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in theoden:
                    if re.search(r"\b(" + "|".join(theoden) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("theoden")
                        comment.reply("Hail Théoden King!")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in thousand:
                    if re.search(r"\b(" + "|".join(thousand) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("thousand")
                        comment.reply("You have two thousand good men riding north as we speak. Éomer is loyal to you. His men will return and fight for their King.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in open:
                    if re.search(r"\b(" + "|".join(open) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("open")
                        comment.reply("Open war is upon you, whether you would risk it or not.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in deep:
                    if re.search(r"\b(" + "|".join(deep) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("Helm's deep")
                        comment.reply("He is only doing what he thinks is best for his people. Helm’s Deep has saved them in the past.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in rivendell:
                    if re.search(r"\b(" + "|".join(rivendell) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("rivendell")
                        comment.reply("I was raised in Rivendell … for a time. Turn this fellow free. He’s seen enough of war.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in blade:
                    if re.search(r"\b(" + "|".join(blade) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("blade")
                        comment.reply("You have some skill with a blade.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in fear:
                    if re.search(r"\b(" + "|".join(fear) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("fear")
                        comment.reply("What do you fear my lady?")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in cage:
                    if re.search(r"\b(" + "|".join(cage) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("cage")
                        comment.reply("You’re a daughter of Kings. A shield maiden of Rohan. I do not think that will be your fate.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in beard:
                    if re.search(r"\b(" + "|".join(beards) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("beards")
                        comment.reply("It’s the beards.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in stew:
                    if re.search(r"\b(" + "|".join(stew) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("stew")
                        comment.reply("Thank you...It’s good.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in memory:
                    if re.search(r"\b(" + "|".join(memory) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                        print("memeory")
                        comment.reply(" King Théoden has a good memory. He was only a small child at the time.")
                        comment_replied_to.append(comment.id)
                        with open("comment_replied_to.txt", "a") as f:
                            f.write(comment.id + "\n")
                for keyword in



























            for keyword in aragorn:

                if re.search(r"\b(" + "|".join(aragorn) + r")\b", comment.body,re.IGNORECASE) and comment.id not in comment_replied_to and comment.author not in comment_replied_to and comment.author != r.user.me():
                    print("Breakfast has been found")

                    list = ["You draw far too much attention to yourself Mr. “Underhill”!"," A little more caution from you. That is no trinket you carry.", "Indeed. I can avoid being seen if I wish. But to disappear entirely, that is a rare gift.", " Are you frightened?", "Not nearly frightened enough. I know what hunts you.", " You have a stout heart little hobbit, but that will not save you. You can no longer wait for the wizard" + " " + comment.author.name + ". " + " " + "They’re coming.", "To Rivendell, Master" + " " + comment.author.name + "." + " " + 'To the House of Elrond', "Gentlemen, we do not stop until nightfall.", "You’ve already had it.", " ‘Tis the lady of Luthien- the Elf-maiden who gave her love to Beren, a mortal.",  "This was the great watchtower of Amon Sûl. We shall rest here tonight.", "These are for you. Keep them close. I’m going to have a look around. Stay here.", " He’s been stabbed by a Morgul blade.  This is beyond my skill to heal. He needs elvish medicine.", "He’s passing into the shadow world. He will soon become a wraith like them.",
                            comment.author.name + " " + ", do you know the Athelas plant?", 'It may help to slow the poison. Hurry!', comment.author.name + "!" + " " + "Ride hard! Don’t look back!", " I am a friend to Gandalf the Grey.", "The same blood flows in my veins... The same weakness.", "I thought I had strayed into a dream.", "You said you’d bind yourself to me. Forsaking the immortal life of your people.", " You cannot wield it! None of us can. The One Ring answers to Sauron alone. It has no other master", " If by my life or death, I can protect you, I will. You have my sword.", "I do not want that power. I have never wanted it.", " Move your feet.", " Gentlemen, that’s enough!", comment.author.name + "!" + " "+ "Give the Ring to Frodo.",  "HES TRYING TO BRING DOWN THE MOUNTAIN! GANDALF WE MUST TURN BACK!", " The Gap of Rohan takes us too close to Isengard!", "The mines are no place for a pony, even one so brave as Bill.", " Go on, Bill, go on. Don’t worry" + " " + comment.author.name + ", " + " " + "he knows the way home.", "Do not disturb the water.", "Into the cave! Run!", "Get back! Stay close to Gandalf!","You should be dead. That spear would have skewered a wild boar." , "Steady! Hold on. Hang on! Lean forward! Steady!",
                            " Legolas, get them up.", "By nightfall these hills will be swarming with Orcs! We must reach the Woods of Lothlórien. Come Boromir. Legolas. Gimli, get them up.", "On you feet" + " " + comment.author.name + "." + " " + "Frodo? Frodo! ", "That was not so courteous.", "I have seen the White City, long ago.", "Gollum. He has tracked us since Moria. I had hoped we would lose him on the river. But he’s too clever a waterman.", "There is no strength in Gondor that can avail us.", "I will not lead the Ring within a hundred leagues of your city.", comment.author.name + "," + " " + "the Argonath! Long have I desired to look upon the kings of old... My kin.", "That is our road. I suggest you take some rest and recover your strength, Master Dwarf.", "No. Orcs patrol the eastern shore. We must wait for cover of darkness.", "Where is the Ring?","I swore to protect you.", "I would have gone with you to the end. Into the very fires of Mordor.", "*Boromir.*", "I let Frodo go.", " No, Boromir. You fought bravely. You have kept your honor.", "I do not know what strength is in my blood, but I swear to you I will not let the White City fall, nor our people fail.", "Be at peace, son of Gondor.","They will look for his coming from the White Tower. But he will not return.",
                            "Frodo’s fate is no longer in our hands.", "Not if we hold true to each other. We will not abandon Merry and Pippin to torment and death. Not while we have strength left. Leave all that can be spared behind. We travel light. Let’s hunt some Orc.", "Their pace has quickened. They must have caught our scent...hurry!", "Not idly do the leaves of Lorien fall.", "Less than a day ahead of us. Come.", " Rohan. Home of the Horse-lords. There is something strange at work here.Some evil gives speed to these creatures. Sets its will against us.", comment.author.name + "!" + " " + "What do your Elf-eyes see?"]

                    random_item = random.choice(list)

                    comment.reply(random_item)

                    comment_replied_to.append(comment.id)

                    with open("comment_replied_to.txt", "a") as f:
                        f.write(comment.id + "\n")

























    print("Sleep")


def get_saved_comments():
    if not os.path.isfile("comment_replied_to.txt"):
        comment_replied_to = []
    else:
        with open("comment_replied_to.txt", "r") as f:
            comment_replied_to = f.read()
            comment_replied_to = comment_replied_to.split("\n")
    return comment_replied_to


r = bot_login()
comment_replied_to = get_saved_comments()
while True:
    run_bot(r, comment_replied_to)
